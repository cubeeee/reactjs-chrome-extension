({3441:function(){var e=this&&this.__awaiter||function(e,o,t,r){return new(t||(t=Promise))((function(n,c){function a(e){try{i(r.next(e))}catch(e){c(e)}}function s(e){try{i(r.throw(e))}catch(e){c(e)}}function i(e){var o;e.done?n(e.value):(o=e.value,o instanceof t?o:new t((function(e){e(o)}))).then(a,s)}i((r=r.apply(e,o||[])).next())}))};const o="https://api.netproxy.io/api/rotateProxy";let t=null,r="all",n="all";const c=(o,t,r)=>e(this,void 0,void 0,(function*(){chrome.runtime.sendMessage({command:o,message:t,config:r},(function(e){}))})),a=e=>{chrome.alarms.clear(e)};a("refreshPage");const s=o=>e(this,void 0,void 0,(function*(){const e=o.data.proxy,[t,r]=(o.data.newTab,e.split(":"));if(!t||!r)return void c("getProxyFailed",{error:"Thông tin proxy không hợp lệ!"},{});const n={mode:"fixed_servers",rules:{singleProxy:{scheme:"http",host:t,port:parseInt(r)},bypassList:["*netproxy.io, localhost ,127.0.0.1"]}};p(n)})),i=e=>new Promise(((o,t)=>{setTimeout(o,e)}));let l=!1,d=null;const h=t=>e(this,void 0,void 0,(function*(){try{const{timeRefresh:a,apiKey:h,country:u,type:p,isAutoRefresh:y,isConnected:g}=t.data;if(r=u,n=p,d&&(console.log("Stopping current worker..."),l=!0,yield d,d=null),l=!1,!y&&!g)return void c("autoChangeIpFailed",{error:"Auto-change proxy is disabled."},{});if(y&&a>0){let t=a;d=(()=>e(this,void 0,void 0,(function*(){for(;!l;){if(yield i(1e3),0===t){const e=new URL(`${o}/getNewProxy`),r={apiKey:h,country:"all"===u?void 0:u,type:"all"===p?void 0:p};Object.keys(r).forEach((o=>r[o]&&e.searchParams.append(o,r[o])));const n=yield fetch(e.toString(),{method:"GET"}),c=yield n.json();c&&(console.log("New proxy:",c),s(c),chrome.runtime.sendMessage({type:"proxy_autoChangeIp_result",data:c}),t=a)}t--,chrome.runtime.sendMessage({type:"proxy_autoChangeIp_countdown",data:t})}console.log("Worker stopped.")})))(),d.catch((e=>{console.error("Worker error:",e)}))}else l=!0,d=null,console.log("Auto-change proxy stopped.")}catch(e){console.error("Error when startThreadAutoChangeProxy:",e)}})),u=()=>{l=!0,d&&(console.log("Stopping worker..."),d=null)};chrome.alarms.onAlarm.addListener((function(o){return e(this,void 0,void 0,(function*(){o.name}))})),chrome.runtime.onMessage.addListener(((o,r,n)=>e(this,void 0,void 0,(function*(){switch(o.type){case"proxy_connect":y(),s(o);break;case"proxy_change":s(o);break;case"proxy_disconnect":a("flagLoop"),a("refreshPage"),chrome.proxy.settings.set({value:{mode:"direct"},scope:"regular"},(()=>{console.log("Proxy has been reset to direct connection.")})),y(),u();break;case"proxy_autoChangeIp":h(o);break;case"proxy_stopAutoChangeIp":u();break;case"setApiKey":t=o.data.apiKey;break;default:console.error("do nothing with this request")}}))));const p=e=>{chrome.action.setBadgeBackgroundColor({color:"#D6EBDC"}),chrome.action.setBadgeText({text:"ON"}),chrome.action.setBadgeTextColor({color:"#28c76f"}),chrome.proxy.settings.set({value:e,scope:"regular"})},y=()=>{chrome.action.setBadgeBackgroundColor({color:[162,36,36,255]}),chrome.action.setBadgeText({text:""}),chrome.proxy.settings.set({value:{mode:"direct"},scope:"regular"}),chrome.storage.sync.set({tx_proxy:null})},g=()=>e(this,void 0,void 0,(function*(){const e=new URL(`${o}/getNewProxy`);console.log("apiKey",t);const c={apiKey:t,country:r,type:n};Object.keys(c).forEach((o=>c[o]&&e.searchParams.append(o,c[o])));let a=!1;for(;!a;){try{const o=yield fetch(e.toString(),{method:"GET"}),t=yield o.json();t&&t.data&&t.data.proxy?(console.log("New proxy fetched:",t.data.proxy),yield s(t),a=!0):console.error("Failed to fetch new proxy: Invalid response format")}catch(e){console.error("Error fetching new proxy, retrying...",e)}a||(yield i(1e4))}}));chrome.webRequest.onAuthRequired.addListener((function(e){return console.log("Auth required for proxy, fetching a new one..."),g(),{cancel:!0}}),{urls:["<all_urls>"]},["blocking"]),chrome.webRequest.onErrorOccurred.addListener((function(o){return e(this,void 0,void 0,(function*(){"net::ERR_PROXY_CONNECTION_FAILED"===o.error&&(console.log("Proxy connection failed, fetching a new proxy..."),g())}))}),{urls:["<all_urls>"]})}})[3441]();